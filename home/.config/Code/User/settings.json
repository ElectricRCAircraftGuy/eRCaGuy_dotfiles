// This file, or a symlink to it, should be placed into "~/.config/Code/User/settings.json".
// Official Documentation: https://code.visualstudio.com/docs/getstarted/settings

{
    // "security.workspace.trust.untrustedFiles": "open",
    "markdown.extension.toc.orderedList": true,
    // "terminal.integrated.tabs.location": "left",

    "files.watcherExclude": {
        "output/**": true
    },
    "remote.SSH.configFile": "/home/gabriel/.ssh/config",
    "remote.SSH.connectTimeout": 300,
    "remote.SSH.lockfilesInTmp": true,
    "remote.SSH.logLevel": "trace",
    "remote.SSH.remotePlatform": {
        "my_company_name": "linux",
    },
    "cmake.configureOnOpen": true,
    "C_Cpp.files.exclude": {
        "output/**": true,
        "**/.vscode": true,
        "**/.vs": true
    },
    "files.insertFinalNewline": true,
    "editor.mouseWheelScrollSensitivity": 1,
    "editor.tabSize": 4,
    // "editor.insertSpaces": true,
    "files.trimTrailingWhitespace": true,
    // When working in legacy code, I may not want to disrupt with distracting whitespace changes in
    // the `git diff` / PR. So, uncomment this temporarily for that work.
    // "files.trimTrailingWhitespace": false,
    "editor.wordWrap": "on",
    "editor.formatOnPaste": false,
    // "editor.formatOnSave": false,  // https://stackoverflow.com/a/68217301/4561887
    "editor.snippetSuggestions": "top",
    "editor.fontSize": 12,
    "editor.rulers": [
        // 80,
        100,
        120,
    ],
    // GS: see also this info about pressing Alt + Q multiple times to wrap to
    // different columns:
    // https://github.com/stkb/Rewrap/issues/383#issuecomment-1738115865
    //
    // "rewrap.wrappingColumn": 80,
    // "rewrap.wrappingColumn": 100,
    // "rewrap.wrappingColumn": 120,

    // My favorite color theme is
    // "workbench.colorTheme": "Monokai",
    "workbench.colorTheme": "Monokai",

    // Override editor syntax colors and font style from the currently selected color theme.
    // GS: see:
    // 1. *****++ my new answer: How to colorize Python docstrings to your liking; ex: like strings
    //    - https://stackoverflow.com/a/76440715/4561887
    // 1. *****+ my answer here: How to subdue Python block comment strings in VSCode in order to
    //    look like Sublime Text's Monokai - https://stackoverflow.com/a/76224318/4561887
    // 1. This answer by @RND here: https://stackoverflow.com/a/68008322/4561887
    // 1. my tutorial here:
    //    https://github.com/volosovich/Monokai-ST3-theme-for-vscode/issues/14
    "editor.tokenColorCustomizations": {
        "[Monokai]": {
            "textMateRules": [
                // =================================================================================
                // Python docstrings
                // - make them look like regular Python comments
                // =================================================================================
                {
                    "name": "Docstrings (including Python docstrings)",
                    "scope": [
                        // For Python multi-line docstrings / block comments!
                        // "string.quoted.docstring.multi.python",
                        "string.quoted.docstring",
                    ],
                    "settings": {
                        // "fontStyle": "italic",

                        // Ex: to color docstrings like strings in Monokai
                        // "foreground": "#E6DB74",
                        // Ex: to color docstrings like comments in Monokai
                        "foreground": "#88846F",
                    }
                },
                {
                    "name": "Doxygen variable names",
                    // This works! YOU **MUST** put the wider scope FIRST, and then the narrower
                    // scope after!
                    "scope": [
                        "comment.block.documentation.cpp variable.parameter.cpp",
                        "comment.line.double-slash.documentation.cpp variable.parameter.cpp",
                    ],
                    // "scope": "comment.block.documentation.cpp",
                    // "scope": "comment.block.documentation.cpp",
                    // "scope": ["comment.block.documentation.cpp", "variable.parameter.cpp"],
                    // "scope": ["comment.block.documentation.cpp", "variable.parameter.cpp"],
                    "settings": {
                        // "foreground": "#854800"
                        "foreground": "#a6a292",
                    },
                },
                {
                    "name": "Doxygen keywords, such as 'param' and 'brief'",
                    "scope": "storage.type.class.doxygen.cpp",
                    "settings": {
                        // "foreground": "#66D9EF",  // default value
                        "foreground": "#7C8E9C",
                    }
                },
                // =================================================================================
                // C and C++ doxygen comments
                // - make them darker / more subdued
                // =================================================================================
                {
                    "name": "@brief, @details, etc.",
                    "scope": [
                        "storage.type.class.doxygen.c",
                    ],
                    "settings": {
                        // "foreground": "#66D9EF",  // default value; see: https://www.colorhexa.com/66d9ef
                        "foreground": "#107f95",
                    }
                },
                {
                    "name": "[in], [out], [in,out], etc.",
                    "scope": [
                        "keyword.other.parameter.direction",
                    ],
                    "settings": {
                        // "foreground": "#F92672",  // default value
                        "foreground": "#f1075b",
                    }
                },
                {
                    "name": "Doxygen variable names",
                    "scope": [
                        "variable.parameter.c",
                    ],
                    "settings": {
                        // "foreground": "#FD971F"  // default value
                        "foreground": "#b86402",
                    },
                },
            ]
        }
    },

    // Controls whether the Explorer should automatically reveal and select files when opening them.
    //  - true: Files will be revealed and selected.
    //  - false: Files will not be revealed and selected.
    //  - focusNoScroll: Files will not be scrolled into view, but will still be focused.
    // GS note: default is `true`
    // See my answer here: https://stackoverflow.com/a/76205209/4561887
    "explorer.autoReveal": true,
    "terminal.integrated.fontSize": 12,

    // GS: show the full path to the file in the Window title (ie: the title at the very top of the
    // VSCode window), rather than just the filename.
    // See: https://medium.com/riow/vscode-show-full-path-in-title-bar-b0cb731b330
    // To get to the settings: Ctrl + , --> search for "Window: Title".
    // This is the default setting:
    // "window.title": "${dirty}${activeEditorShort}${separator}${rootName}${separator}${profileName}${separator}${appName}",
    // This is a previous setting I may have used in the past, I think:
    // "window.title": "${dirty}${activeEditorMedium}${separator}${rootName}${separator}${appName}",
    "window.title": "${dirty}${activeEditorLong}${separator}${rootName}${separator}${profileName}${separator}${appName}",

    "rewrap.wholeComment": false,
    "git.openRepositoryInParentFolders": "always",
    "editor.inlineSuggest.enabled": true,
    "github.copilot.advanced": {},
    "[python]": {
        "editor.defaultFormatter": "ms-python.autopep8"
    },
    "python.formatting.provider": "none",
    "settingsSync.ignoredSettings": [
        "editor.fontSize"
    ],

    // Do not trim trailing whitespace in Markdown or txt files.
    // See: https://stackoverflow.com/a/51935030/4561887
    "[markdown]": {
        "files.trimTrailingWhitespace": false
    },
    "[plaintext]": {
        "files.trimTrailingWhitespace": false
    },

    "github.copilot.enable": {
        "*": true,
        "plaintext": true,
        "markdown": true,
        // GS: files that are used as input for source control management (SCM) systems, such as Git I suspect
        "scminput": false,
    },
    "cSpell.ignoreWords": [
        "elif"
    ],
    "security.workspace.trust.untrustedFiles": "open",
    "window.zoomLevel": 1,
    "cSpell.userWords": [
        "microcontroller"
    ],
}
